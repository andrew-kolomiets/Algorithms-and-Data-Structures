#include <iostream>
#include <string>

using namespace std;

struct element
{
	//данні списку
	string str;

	//вказівник на адресу наступного елементу списку
	element *next;
};

element *EnterList()
{
	//данні про перший і поточний елемент списку

	element *first, *current;

	string answer;

	//тут ми створюємо новий але саме головне початковий елемент списку з своїми данними

	cout << "Enter first string:";

	first = current = new element;

	//вводимо данні про динамічну структуру поточну
	cin >> (current->str);

	//після створення першого елементу списку ми можемо послатися на іншу область динамічної пам'яті, де ми можемо створити другий елемент списку, або і більше
	cout << "Do you want new string? (No for exit)";

	cin >> answer;

	// робимо запит на створенння нового елементу списку

	while (answer != "No")
	{
		// створюємо ділянку пам'яті під нову динамічну структуру
		current->next = new element;

		//в новій динамічній структурі нам не важливо знати адрес попереднього елементу, тому наступний це типу попередній, тобто поточний
		current = current->next;

		//вводимо данні про динамічну структуру поточну
		cout << "Enter string: ";

		cin >> current->str;

		// робимо запит на створенння нового елементу списку

		cout << "Do you want to enter new string?(No for exit)";

		cin >> answer;
	}

	// якщо цикл не був виконаний, або в разі його виконнання ми повині вказати на кінцевий, а тобто нульовий елемент списку з відповідною адресою

	current->next = NULL;

	// це просто значення, яке поверне наша функція, а саме адрес на наш перший елемент списку, з якого ми будемо починати при виведенні всіх данних списку
	
	return first;
}

int Count(element *list)
{
	int result = 0;

	// захистимося в випадку, якщо вказано не адресу, а щось інше
	if (!list)
	{
		cout << "List is empty";
	}

	// якщо адрес списку вірний, то починаємо підрахунок елементів списку по черзі, тобто від поточного до натупного, від поточного до наступного
	while (list != NULL)
	{
		result++;
		list = list->next;
	}

	// тут відбувається вивід кількості елементів підрахованих

	return result;
}

int main()
{
	//створимо два елементи, де перший це внас буде вказівник на перший елемент списку, який видає нам функція EnterList

	element *current, *top;
	top = EnterList();

	current = top;

	while (current != NULL)
	{
		//виводяться данні про кожен елемент списку, тобто окремої динамічної структури
		cout << current->str << endl;

		//Присвоюємо поточному елементу наступну адресу, аби пройти цикл знову і дійти до останнього нульового елементу списку з вказаною адресою
		current = current->next;
	}

	// задаємо функцію, яка обчислює кількість елементів списку

	cout << endl<< "Size of List is " << Count(top) << endl;

	cin.get();
	cin.get();
	return 0;
}

